x-database-creds: &database-creds
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpass}
  POSTGRES_USER: paths
  POSTGRES_DB: paths
  DATABASE_URL: ${DATABASE_URL:-postgres://paths:defaultpass@db/paths}
x-django-environment: &django-environment
  <<: *database-creds
  DATABASE_URL: ${DATABASE_URL:-postgres://paths:defaultpass@db/paths}
  ENV_FILE:
  REDIS_URL: redis://redis
  STATIC_ROOT: /srv/static
  MEDIA_ROOT: /srv/media
  LC_CTYPE: C.UTF-8
  DEBUG:
  DEPLOYMENT_TYPE:
  ALLOWED_HOSTS:
  COOKIE_PREFIX:
  INTERNAL_IPS:
  SENTRY_DSN:
  SECRET_KEY:
  AWS_ACCESS_KEY_ID:
  AWS_SECRET_ACCESS_KEY:

x-django-build: &django-build
  context: .
  dockerfile: kausal_common/docker/Dockerfile
  args:
    - STATIC_ROOT
    - DJANGO_PROJECT=paths
    - SENTRY_PROJECT=paths-backend
  secrets:
    - EXTRA_PYPI_INDEX

x-common-runtime: &common-runtime
  restart: 'unless-stopped'

services:
  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      <<: *database-creds
    <<: *common-runtime
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "paths", "-d", "paths"]
      interval: 30s
      timeout: 5s
      start_period: 2s
      retries: 3
    volumes:
      - db_data:/var/lib/postgresql/data/

  redis:
    image: ${REDIS_IMAGE-redis:7-alpine}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 5s
      start_period: 2s
      retries: 3

  app:
    build: *django-build
    restart: "no"
    user: '1000:1000'
    volumes:
      - media:/srv/media
      - dataset_cache:/cache
    command: ["gunicorn"]
    environment:
      <<: *django-environment
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "--tries=1", "http://127.0.0.1:8000/healthz/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 2s

volumes:
  db_data:
  media:
  dataset_cache:

secrets:
  EXTRA_PYPI_INDEX:
    file: ./.secrets/EXTRA_PYPI_INDEX
