# emission_sectors:

# - id: other_emissions
#   name: Other emissions
#   input_nodes: [net_emissions]

dimensions:

- id: diet
  label: Diet
  categories:
  - id: current_average
    label: Current average
  - id: flexitarian
    label: Flexitarian
  - id: pescetarian
    label: Pescetarian
  - id: vegetarian
    label: Vegetarian
  - id: vegan
    label: Vegan

- id: material
  label: Material
  categories:
  - id: concrete
    label: Concrete
  - id: steel
    label: Steel
  - id: plastics
    label: Plastics
  - id: aluminium
    label: Aluminium

nodes:

# --------------- Other emissions ----------

- id: emissions_from_other_sectors
  name: Emissions from other sectors
  type: gpc.DatasetNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [scope, cost_type, ghg]
  output_dimensions: [scope, cost_type, ghg]
  output_nodes:
  - id: net_emissions
    from_dimensions:
    - id: cost_type
      flatten: true
    to_dimensions:
    - id: scope
    - id: ghg
    - id: sector
      categories: [other]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Emissions from other sectors

# --------------- Scope 3 ------------------

- id: building_material_shares
  name: Building material shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets: [nzc/defaults]
  params:
    sector: Materials as share of total mass

- id: building_materials_used_in_new_buildings
  name: Building material used in new buildings
  type: gpc.DatasetNode
  quantity: mass
  unit: t/m**2
  input_datasets: [nzc/defaults]
  params:
    sector: Tonnes material used in for new buildings (2010)

- id: building_materials_used_by_material
  name: Building materials used by material
  type: simple.MultiplicativeNode
  quantity: mass
  unit: t/m**2
  input_dimensions: [material]
  output_dimensions: [material]
  input_nodes:
  - id: building_materials_used_in_new_buildings
    tags: [non_additive]
    to_dimensions: []
  - id: building_material_shares
    to_dimensions:
    - id: material

- id: building_construction_material_use
  name: Building construction material use
  type: simple.MultiplicativeNode
  quantity: mass
  unit: kt/a
  input_dimensions: [building_energy_class, material]
  output_dimensions: [building_energy_class, material]
  input_nodes:
  - id: new_building_stock
    to_dimensions:
    - id: building_energy_class
  - id: building_materials_used_by_material
    to_dimensions:
    - id: material

- id: tonnes_material_used_for_renovations
  name: Tonnes material used for renovations
  type: gpc.DatasetNode
  quantity: mass
  unit: t/m**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets: [nzc/defaults]
  params:
  - id: sector
    value: Tonnes material used for renovations

- id: building_renovation_material_use
  name: Building renovation material use
  type: simple.MultiplicativeNode
  quantity: mass
  unit: kt/a
  input_dimensions: [building_energy_class, material]
  output_dimensions: [building_energy_class, material]
  input_nodes:
  - id: renovated_building_stock
    from_dimensions:
    - id: building_energy_class
      categories: [minor_renovation, major_renovation]
    to_dimensions:
    - id: building_energy_class
  - id: tonnes_material_used_for_renovations
    to_dimensions:
    - id: building_energy_class
  - id: building_material_shares
    to_dimensions:
    - id: material

- id: building_material_use
  name: Building material use
  type: simple.AdditiveNode
  quantity: mass
  unit: kt/a
  input_dimensions: [building_energy_class, material]
  output_dimensions: [building_energy_class, material]
  input_nodes:
  - id: building_construction_material_use
  - id: building_renovation_material_use

# - id: building_material_composition
#   name: Building material composition
#   type: gpc.DatasetNode
#   quantity: mass
#   unit: t/m**2
#   input_dimensions: [material]
#   output_dimensions: [material] 
#   input_datasets:
#   - id: nzc/defaults
#   params:
#     sector: New materials composition due to materials efficiency

# - id: building_material_emission_factor
#   name: Building material emission factor
#   type: gpc.DatasetNode
#   quantity: emission_factor
#   unit: t/t
#   input_dimensions: [material]
#   output_dimensions: [material]
#   input_datasets: [nzc/defaults]
#   params:
#     sector: Emissions from production

- id: building_material_unit_price
  name: Building material unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/t
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets: [nzc/defaults]
  params:
    sector: Production costs per tonne

- id: building_material_cost
  name: Building material cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [material, stakeholder, cost_type]
  output_dimensions: [material, stakeholder, cost_type]
  input_nodes:
  - id: building_material_use
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: material
  - id: building_material_unit_price
    to_dimensions:
    - id: material
  - id: new_building_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: building_cost
    from_dimensions:
    - id: material
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder

# ------------- Food -------------------

# - id: food_consumption_per_person
#   name: Food consumption per person
#   type: gpc.DatasetNode
#   quantity: energy
#   unit: kcal/cap/d
#   input_datasets: [nzc/defaults]
#   params:
#     sector: Average food Consumption per capita

# ----------- AFOLU --------------

# - id: distribution_between_trees_in_grey_and_green_area
#   name: Distribution between trees in grey and green area
#   type: gpc.DatasetNode
#   quantity: fraction
#   unit: dimensionless
#   input_dimensions: [city_area, area_distance]
#   output_dimensions: [city_area, area_distance]
#   input_datasets: [nzc/defaults]
#   params:
#     sector: Distribution between trees in grey and green area

# - id: number_of_new_trees
#   name: Number of new trees
#   type: gpc.DatasetNode
#   quantity: number
#   unit: pcs
#   input_dimensions: [area_distance]
#   output_dimensions: [area_distance]
#   input_datasets: [nzc/defaults]
#   params:
#     sector: Number of planted trees until 2030
#     inventory_only: true

# - id: tree_planting_unit_price
#   name: Tree planting unit price
#   type: gpc.DatasetNode
#   quantity: unit_price
#   unit: EUR/pcs
#   input_dimensions: [area_distance, cost_type]
#   output_dimensions: [area_distance, cost_type]
#   input_datasets: [nzc/defaults]
#   params:
#     sector: Cost of planting trees  by area distance

# - id: tree_planting_cost
#   name: Tree planting cost
#   type: simple.MultiplicativeNode
#   quantity: currency
#   unit: MEUR/a
#   input_dimensions: [area_distance, cost_type]
#   output_dimensions: [area_distance, cost_type]
#   input_nodes:
#   - id: tree_planting_unit_price
#   - id: number_of_new_trees
#     tags: [difference]
#     to_dimensions:
#     - id: area_distance
#   output_nodes:
#   - id: forestation_cost
#     from_dimensions:
#     - id: area_distance
#       flatten: true
#     to_dimensions:
#     - id: cost_type
#     - id: stakeholder
#       categories: [city]

# - id: population_density_outside_city_compared_to_inside_city
#   name: Population density outside city compared to inside city
#   type: gpc.DatasetNode
#   quantity: fraction
#   unit: '%'
#   input_dimensions: [area_distance]
#   output_dimensions: [area_distance]
#   input_datasets:
#   - id: nzc/defaults
#   params:
#     sector: Population density outside city compared to inside city

# - id: annual_co2_capture_by_trees
#   name: Annual CO2 capture by trees
#   type: gpc.DatasetNode
#   quantity: emission_factor
#   unit: t/pcs/a
#   input_datasets:
#   - id: nzc/defaults
#   params:
#   - id: sector
#     value: Annual CO2 capture per tree

# - id: co2_reduction_by_trees
#   name: CO2 reduction by trees
#   type: simple.MultiplicativeNode
#   quantity: emissions
#   unit: kt/a
#   input_dimensions: [area_distance]
#   output_dimensions: [area_distance]
#   input_nodes:
#   - id: number_of_new_trees
#   - id: annual_co2_capture_by_trees
#     to_dimensions: []
#   output_nodes:
#   - id: forestation_emissions
#     tags: [arithmetic_inverse]
#     from_dimensions:
#     - id: area_distance
#       flatten: true
#     to_dimensions:
#     - id: scope
#       categories: [scope1]
#     - id: ghg
#       categories: [co2e]

# - id: forestation_emissions
#   name: Forestation emissions
#   type: simple.AdditiveNode
#   quantity: emissions
#   unit: kt/a
#   color: '#76B7B2'
#   input_dimensions: [ghg, scope]
#   output_dimensions: [ghg, scope]
#   output_nodes:
#   - id: emissions_from_other_sectors
#     to_dimensions:
#     - id: ghg
#     - id: scope
#     - id: cost_type
#       categories: [agriculture_afolu]
  
# - id: forestation_co2_cost
#   name: Forestation CO2 cost
#   type: simple.MultiplicativeNode
#   quantity: currency
#   unit: MEUR/a
#   input_dimensions: [scope, cost_type, ghg]
#   output_dimensions: [scope, cost_type, ghg]
#   input_nodes:
#   - id: forestation_emissions
#     to_dimensions:
#     - id: scope
#     - id: ghg
#   - id: co2_unit_price
#     to_dimensions:
#     - id: cost_type
#     - id: ghg
#   output_nodes:
#   - id: forestation_cost
#     from_dimensions:
#     - id: scope
#       flatten: true
#     - id: ghg
#       flatten: true
#     to_dimensions:
#     - id: cost_type
#     - id: stakeholder
#       categories: [city]

# - id: forestation_cost
#   name: Forestation cost
#   type: simple.AdditiveNode
#   quantity: currency
#   unit: MEUR/a
#   input_dimensions: [cost_type, stakeholder]
#   output_dimensions: [cost_type, stakeholder]
#   output_nodes:
#   - id: total_cost
#     to_dimensions:
#     - id: cost_type
#     - id: stakeholder

# - id: tree_benefit_unit_price
#   name: Tree benefit unit price
#   type: gpc.DatasetNode
#   quantity: unit_price
#   unit: MEUR/pcs/a
#   input_dimensions: [cost_type]
#   output_dimensions: [cost_type]
#   input_datasets: [nzc/defaults]
#   params:
#   - id: sector
#     value: 'Benefits from planting trees '

# - id: tree_benefit_stakeholders
#   name: Tree benefit stakeholders
#   type: gpc.DatasetNode
#   quantity: fraction
#   unit: '%'
#   input_dimensions: [stakeholder, cost_type]
#   output_dimensions: [stakeholder, cost_type]
#   input_datasets: [nzc/defaults]
#   params:
#     sector: forest costs and savings

# - id: tree_co_benefits
#   name: Monetary co-benefits
#   type: simple.MultiplicativeNode
#   quantity: currency
#   unit: MEUR/a
#   input_dimensions: [cost_type, area_distance, stakeholder]
#   output_dimensions: [cost_type, area_distance, stakeholder]
#   input_nodes:
#   - id: number_of_new_trees
#     to_dimensions:
#     - id: area_distance
#   - id: tree_benefit_unit_price
#     to_dimensions:
#     - id: cost_type
#   - id: tree_benefit_stakeholders
#     to_dimensions:
#     - id: stakeholder
#     - id: cost_type
#   output_nodes:
#   - id: forestation_cost
#     tags: [arithmetic_inverse]
#     from_dimensions:
#     - id: area_distance
#       flatten: true
