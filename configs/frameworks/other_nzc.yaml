emission_sectors:

- id: other_emissions
  name: Other emissions
  input_nodes: [net_emissions]

nodes:

- id: electricity_production_emissions  # FIXME Move to main yaml?
  name_en: Electricity production emissions
  type: formula.FormulaNode
  quantity: emissions
  unit: kt/a
  color: '#59A14F'
  input_dimensions: [pollutant, energy_carrier]
  output_dimensions: [pollutant, energy_carrier]
  input_nodes:
  - id: statistical_electricity_consumption
    to_dimensions:
    - id: energy_carrier
  - id: electricity_production_shares
    to_dimensions:
    - id: fuel_type
    - id: energy_carrier
  - id: electricity_production_emission_factor
    to_dimensions:
    - id: pollutant
    - id: energy_carrier
  - id: electricity_production_switched
    from_dimensions:
    - id: fuel_type
      categories: [fossil]
      exclude: true
      flatten: true
    to_dimensions:
    - id: energy_carrier
  output_nodes:
  - id: net_emissions
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: scope
      categories: [scope2]
    - id: ghg
      categories: [co2e]
  params:
    formula: electricity_production_emission_factor * (statistical_electricity_consumption + electricity_production_switched)

- id: new_electricity_production_capacity
  name: New electricity production capacity
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a**2
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_nodes:
  - id: total_electricity_consumption
    tags: [difference, non_additive]
    to_dimensions:
    - id: energy_carrier
  - id: new_electricity_production_shares
    to_dimensions:
    - id: energy_carrier
    - id: fuel_type

- id: electricity_production_capacity
  name: Electricity production capacity
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_nodes:
  - id: total_electricity_consumption
    tags: [non_additive]
    to_dimensions:
    - id: energy_carrier
  - id: electricity_production_shares_historical
    to_dimensions:
    - id: energy_carrier
    - id: fuel_type
  - id: electricity_production_switched
    to_dimensions:
    - id: energy_carrier
    - id: fuel_type

- id: effective_electricity_production_hours
  name: Effective electricity production hours
  type: gpc.DatasetNode
  quantity: ratio
  unit: h/a
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Assumed uptime of wind/solar

- id: job_demand_of_renewables
  name: Job demand of renewables
  description: Are these jobs permanent or do they relate to the building phase of PV? Now we assume that they are permanent and accumulate.
  type: gpc.DatasetNode
  quantity: demand_factor
  unit: jobs/MW
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Jobs created per MW

- id: jobs_created_by_renewables
  name: Jobs created by renewables
  type: simple.MultiplicativeNode
  quantity: employment
  unit: jobs
  is_outcome: true
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_nodes:
  - id: new_electricity_production_capacity
    tags: [cumulative]
    to_dimensions:
    - id: energy_carrier
    - id: fuel_type
  - id: job_demand_of_renewables
    to_dimensions:
    - id: energy_carrier
  - id: effective_electricity_production_hours
    tags: [geometric_inverse]
    to_dimensions:
    - id: energy_carrier

- id: new_electricity_production_shares
  name: New electricity production shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Distribution of type of new renewables

- id: electricity_production_shares_historical
  name_en: Electricity production shares historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of total electricity demand produced by fossil/renewables

- id: solar_electricity_produced_by_solar_pvs
  name: Solar electricity produced by solar PVs
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/kW/a
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Solar electricity produced by solar PVs

- id: solar_electricity_produced_by_solar_pv_area
  name: Solar electricity produced by solar PV area
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Yearly average of solar electricity generated by 1 m2 solar PV

- id: electricity_production_shares
  name_en: Electricity production shares
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_nodes:
  - id: electricity_production_shares_historical

- id: renewable_uptime
  name: Renewable uptime
  description: Assumed uptime of wind and solar electricity production
  type: gpc.DatasetNode
  quantity: ratio
  unit: h/a
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Assumed uptime of wind/solar

- id: renewable_electricity_upfront_price
  name: Renewable electricity upfront price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/MWh
  input_dimensions: [fuel_type, energy_carrier, cost_type]
  output_dimensions: [fuel_type, energy_carrier, cost_type]
  input_datasets: [nzc/defaults]
  params:
    sector: 'PV: Upfront investment cost'

- id: renewable_electricity_shares
  name: Renewable electricity shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [fuel_type, stakeholder, cost_type]
  output_dimensions: [fuel_type, stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    sector: solar panel costs
  output_nodes:
  - id: renewable_electricity_cost
    to_dimensions:
    - id: fuel_type
    - id: stakeholder
    - id: cost_type

- id: renewable_electricity_cost
  name: Renewable electricity cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [fuel_type, energy_carrier, cost_type, stakeholder]
  output_dimensions: [fuel_type, energy_carrier, cost_type, stakeholder]
  input_nodes:
  - id: new_electricity_production_capacity
    tags: [cumulative]
    to_dimensions:
    - id: fuel_type
    - id: energy_carrier
  - id: renewable_electricity_upfront_price
    to_dimensions:
    - id: fuel_type
    - id: energy_carrier
    - id: cost_type

- id: electricity_cost  # FIXME Should this be non-renewable?
  name: Electricity cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [energy_carrier, cost_type, stakeholder]
  output_dimensions: [energy_carrier, cost_type, stakeholder]
  input_nodes:
  - id: renewable_electricity_cost
    from_dimensions:
    - id: fuel_type
      flatten: true

- id: electricity_cost_shares
  name: Electrcity cost shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    sector: fossil/current electricity supply

- id: electricity_cost_by_stakeholder  # FIXME Should this be additive renewable + non-renewable?
  name: Electrcity cost by stakeholder
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, cost_type, energy_carrier]
  output_dimensions: [stakeholder, cost_type, energy_carrier]
  input_nodes:
  - id: electricity_cost
    tags: [non_additive]
  - id: electricity_cost_shares
    from_dimensions:
    - id: cost_type
    to_dimensions:
    - id: stakeholder
  output_nodes:
  - id: total_cost
    from_dimensions:
    - id: energy_carrier
      flatten: true

- id: electricity_production_switched
  name: Electricity production switched
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [energy_carrier, fuel_type]
  output_dimensions: [energy_carrier, fuel_type]
  input_nodes:
  - id: statistical_electricity_consumption
    tags: [non_additive]
    to_dimensions:
    - id: energy_carrier
  - id: electricity_production_shares_historical
    from_dimensions:
    - id: fuel_type
      categories: [fossil]
      flatten: true
    to_dimensions:
    - id: energy_carrier
  - id: new_electricity_production_shares
    to_dimensions:
    - id: energy_carrier
    - id: fuel_type

# ----------------- Waste -------------------

- id: collected_waste
  name: Collected waste
  type: gpc.DatasetNode
  quantity: mass
  unit: t/a
  input_dimensions: [waste_type]
  output_dimensions: [waste_type]
  input_datasets: [nzc/defaults]
  params:
    sector: Total collected waste within city boundaries by type

- id: waste_recycling_shares_historical
  name: Waste recycling shares historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [waste_treatment, waste_type]
  output_dimensions: [waste_treatment, waste_type]
  input_datasets: [nzc/defaults]
  params:
    sector: Share recycling/incineration/landfill

- id: waste_recycling_share_goal
  name: Waste recycling share goal
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [waste_treatment, waste_type, parameter]
  output_dimensions: [waste_treatment, waste_type, parameter]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: 5.1. Increased recycling of waste
    slice_category_at_edge: 'parameter:decarbonisaton_scenario'

- id: waste_recycling_shares
  name: Waste recycling shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [waste_treatment, waste_type]
  output_dimensions: [waste_treatment, waste_type]
  input_datasets: [nzc/defaults]
  params:
    sector: Share recycling/incineration/landfill

- id: waste_management_amount
  name: Waste management amount
  type: simple.MultiplicativeNode
  quantity: mass
  unit: t/a
  input_dimensions: [waste_type, waste_treatment]
  output_dimensions: [waste_type, waste_treatment]
  input_nodes:
  - id: collected_waste
    tags: [non_additive]
    to_dimensions:
    - id: waste_type
  - id: waste_recycling_shares

- id: waste_emission_factor
  name: Waste emission factor
  description: OK. But has mixed waste also, although does not come from the same place as the others.
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: t/t
  input_dimensions: [waste_type, waste_treatment, pollutant]
  output_dimensions: [waste_type, waste_treatment, pollutant]
  input_datasets: [nzc/defaults]
  params:
    sector: waste emission factor
  output_nodes:
  - id: waste_emissions

- id: waste_emissions
  name: Waste emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  color: '#B07AA1'
  input_dimensions: [waste_type, waste_treatment, pollutant]
  output_dimensions: [waste_type, waste_treatment, pollutant]
  input_nodes:
  - id: waste_management_amount
    tags: [non_additive]
    to_dimensions:
    - id: waste_type
    - id: waste_treatment
  output_nodes:
  - id: net_emissions
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: waste_treatment
      flatten: true
    - id: waste_type
      flatten: true
    to_dimensions:
    - id: scope
      categories: [scope1]
    - id: ghg
      categories: [co2e]

- id: waste_air_pollution_emission_factor
  name: Waste air pollution emission factor
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: kg/t
  input_dimensions: [pollutant, waste_treatment, energy_carrier]
  output_dimensions: [pollutant, waste_treatment, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Emission factors from waste management
  output_nodes:
  - id: waste_incineration_air_pollution_emissions
    from_dimensions:
    - id: pollutant
      categories: [nox, pm25_combustion, pm10_combustion]
    to_dimensions:
    - id: pollutant
    - id: waste_treatment
    - id: energy_carrier
  - id: waste_emission_factor
    from_dimensions:
    - id: pollutant
      categories: [co2]
    - id: energy_carrier
      flatten: true
    - id: waste_treatment
      categories: [incinerated]
    to_dimensions:
    - id: pollutant
    - id: waste_treatment
    - id: waste_type
      categories: [other_waste]

- id: waste_incineration_air_pollution_emissions
  name: Waste incineration air pollution emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: t/a
  input_dimensions: [pollutant, waste_treatment, waste_type, energy_carrier]
  output_dimensions: [pollutant, waste_treatment, waste_type, energy_carrier]
  input_nodes:
  - id: waste_management_amount
    tags: [non_additive]
#    from_dimensions:  # FIXME Check what is wanted.
#    - id: waste_treatment
#      categories: [incinerated, landfill]
    to_dimensions:
    - id: waste_type
    - id: waste_treatment

- id: recycled_waste_unit_price
  name: Recycled waste unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/t
  input_dimensions: [waste_type, cost_type, energy_carrier]
  output_dimensions: [waste_type, cost_type, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Prices of sorted waste
  output_nodes:
  - id: recycled_waste_sales_income
    from_dimensions:
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: waste_type
    - id: cost_type

- id: recycled_waste_sales_income
  name: Recycled waste sales income
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [waste_type, cost_type, waste_treatment]
  output_dimensions: [waste_type, cost_type, waste_treatment]
  input_nodes:
  - id: waste_management_amount
    to_dimensions:
    - id: waste_type
    - id: waste_treatment
  output_nodes:
  - id: waste_management_cost
    tags: [arithmetic_inverse]

- id: waste_treatment_unit_price
  name: Waste treatment unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/t
  input_dimensions: [waste_treatment, cost_type, energy_carrier]
  output_dimensions: [waste_treatment, cost_type, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Waste management costs
  output_nodes:
  - id: waste_treatment_cost
    from_dimensions:
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: waste_treatment
    - id: cost_type

- id: waste_treatment_cost
  name: Waste treatment cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [waste_type, cost_type, waste_treatment]
  output_dimensions: [waste_type, cost_type, waste_treatment]
  input_nodes:
  - id: waste_management_amount
    to_dimensions:
    - id: waste_type
    - id: waste_treatment
  output_nodes:
  - id: waste_management_cost

- id: waste_management_cost  # FIXME Add nodes for waste incineration income
  name: Waste management cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [waste_type, cost_type, waste_treatment]
  output_dimensions: [waste_type, cost_type, waste_treatment]

- id: waste_management_cost_shares
  name: Waste management cost shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    sector: waste recycling

- id: waste_management_cost_by_stakeholder
  name: Waste management cost by stakeholder
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [cost_type, waste_treatment, stakeholder]
  output_dimensions: [cost_type, waste_treatment, stakeholder]
  input_nodes:
  - id: waste_management_cost
    tags: [non_additive]
    from_dimensions:
    - id: waste_type
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: waste_treatment
  - id: waste_management_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type

- id: waste_air_pollution_cost
  name: Waste air pollution cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, cost_type, waste_treatment]
  output_dimensions: [stakeholder, cost_type, waste_treatment]
  input_nodes:
  - id: waste_incineration_air_pollution_emissions
    from_dimensions:
    - id: waste_type
      flatten: true
    - id: energy_carrier
      flatten: true
    - id: pollutant
      flatten: true
    to_dimensions:
    - id: waste_treatment
  - id: air_pollution_unit_price
    from_dimensions:
    - id: pollutant
      flatten: true
    - id: area_distance
      categories: [outside]
      flatten: true
    to_dimensions:
    - id: cost_type
  - id: transport_co_benefit_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type

- id: waste_cost
  name: Waste cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [cost_type, stakeholder]
  output_dimensions: [cost_type, stakeholder]
  input_nodes:
  - id: waste_air_pollution_cost
    from_dimensions:
    - id: waste_treatment
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder
  - id: waste_management_cost_by_stakeholder
    from_dimensions:
    - id: waste_treatment
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder
  output_nodes:
  - id: total_cost
    to_dimensions:
    - id: cost_type
    - id: stakeholder

# --------------- Scope 3 ------------------

- id: building_material_shares
  name: Building material shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets: [nzc/defaults]
  params:
    sector: Materials as share of total mass

- id: building_materials_used_in_new_buildings
  name: Building material used in new buildings
  type: gpc.DatasetNode
  quantity: mass
  unit: t/m**2
  input_datasets: [nzc/defaults]
  params:
    sector: Tonnes material used in for new buildings (2010)

- id: building_materials_used_by_material
  name: Building materials used by material
  type: simple.MultiplicativeNode
  quantity: mass
  unit: t/m**2
  input_dimensions: [material]
  output_dimensions: [material]
  input_nodes:
  - id: building_materials_used_in_new_buildings
    tags: [non_additive]
    to_dimensions: []
  - id: building_material_shares
    to_dimensions:
    - id: material

- id: building_construction_material_use
  name: Building construction material use
  type: simple.MultiplicativeNode
  quantity: mass
  unit: kt/a
  input_dimensions: [building_energy_class, material]
  output_dimensions: [building_energy_class, material]
  input_nodes:
  - id: new_building_stock
    to_dimensions:
    - id: building_energy_class
  - id: building_materials_used_by_material
    to_dimensions:
    - id: material

- id: tonnes_material_used_for_renovations
  name: Tonnes material used for renovations
  type: gpc.DatasetNode
  quantity: ratio  # FIXME mass
  unit: t/m**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets: [nzc/defaults]
  params:
  - id: sector
    value: Tonnes material used for renovations
  - id: multiplier  # FIXME
    value: 1
    unit: t/m**2

- id: building_renovation_material_use
  name: Building renovation material use
  type: simple.MultiplicativeNode
  quantity: mass
  unit: kt/a
  input_dimensions: [building_energy_class, material]
  output_dimensions: [building_energy_class, material]
  input_nodes:
  - id: renovated_building_stock
    from_dimensions:
    - id: building_energy_class
      categories: [minor_renovation, major_renovation]
    to_dimensions:
    - id: building_energy_class
  - id: tonnes_material_used_for_renovations
    to_dimensions:
    - id: building_energy_class
  - id: building_material_shares
    to_dimensions:
    - id: material

- id: building_material_use
  name: Building material use
  type: simple.AdditiveNode
  quantity: mass
  unit: kt/a
  input_dimensions: [building_energy_class, material]
  output_dimensions: [building_energy_class, material]
  input_nodes:
  - id: building_construction_material_use
  - id: building_renovation_material_use

- id: building_material_composition_historical
  name: Building material composition historical
  type: gpc.DatasetNode
  quantity: mass
  unit: t/m**2
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets:  # FIXME
  - id: nzc/defaults
  params:
    sector: New materials composition due to materials efficiency

- id: building_material_composition_goal
  name: Building material composition goal
  type: gpc.DatasetNode
  quantity: mass
  unit: t/m**2
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets:  # FIXME
  - id: nzc/defaults
  params:
    sector: New materials composition due to materials efficiency # FIXME after

- id: building_material_composition
  name: Building material composition
  type: simple.AdditiveNode
  quantity: mass
  unit: t/m**2
  input_dimensions: [material]
  output_dimensions: [material]
  input_nodes:
  - id: building_material_composition_historical

- id: building_material_emission_factor
  name: Building material emission factor
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: t/t
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets: [nzc/defaults]
  params:
    sector: Emissions from production

- id: building_material_emissions
  name: Building material emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [material, building_energy_class]
  output_dimensions: [material, building_energy_class]
  input_nodes:
  - id: building_material_use
    tags: [non_additive]
    to_dimensions:
    - id: building_energy_class
    - id: material
  - id: building_material_emission_factor
    to_dimensions:
    - id: material
  output_nodes:
  - id: building_emissions
    from_dimensions:
    - id: material
      flatten: true
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: scope
      categories: [scope3]
    - id: ghg
      categories: [co2e]

- id: building_material_unit_price
  name: Building material unit_price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/t
  input_dimensions: [material]
  output_dimensions: [material]
  input_datasets: [nzc/defaults]
  params:
    sector: Production costs per tonne

- id: building_material_cost
  name: Building material cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [material, stakeholder, cost_type]
  output_dimensions: [material, stakeholder, cost_type]
  input_nodes:
  - id: building_material_use
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: material
  - id: building_material_unit_price
    to_dimensions:
    - id: material
  - id: new_building_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: building_cost
    from_dimensions:
    - id: material
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder

# ------------- Food -------------------

- id: food_consumption_per_person
  name: Food consumption per person
  type: gpc.DatasetNode
  quantity: energy
  unit: kcal/cap/d
  input_datasets: [nzc/defaults]
  params:
    sector: Average food Consumption per capita

# ----------- AFOLU --------------

- id: distribution_between_trees_in_grey_and_green_area
  name: Distribution between trees in grey and green area
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [city_area, area_distance]
  output_dimensions: [city_area, area_distance]
  input_datasets: [nzc/defaults]
  params:
    sector: Distribution between trees in grey and green area

- id: number_of_new_trees
  name: Number of new trees
  type: gpc.DatasetNode
  quantity: number
  unit: pcs
  input_dimensions: [area_distance]
  output_dimensions: [area_distance]
  input_datasets: [nzc/defaults]
  params:
    sector: Number of planted trees until 2030
    inventory_only: true

- id: tree_planting_unit_price
  name: Tree planting unit price
  type: gpc.DatasetNode
  quantity: emission_factor # FIXME unit_price
  unit: EUR/pcs
  input_dimensions: [area_distance, cost_type]
  output_dimensions: [area_distance, cost_type]
  input_datasets: [nzc/defaults]
  params:
    sector: Cost of planting trees  by area distance

- id: tree_planting_cost
  name: Tree planting cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [area_distance, cost_type]
  output_dimensions: [area_distance, cost_type]
  input_nodes:
  - id: tree_planting_unit_price
  - id: number_of_new_trees
    tags: [difference]
    to_dimensions:
    - id: area_distance
  output_nodes:
  - id: forestation_cost
    from_dimensions:
    - id: area_distance
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder
      categories: [city]

- id: population_density_outside_city_compared_to_inside_city
  name: Population density outside city compared to inside city
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [area_distance]
  output_dimensions: [area_distance]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Population density outside city compared to inside city

- id: annual_co2_capture_by_trees
  name: Annual CO2 capture by trees
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: t/pcs/a
  input_datasets:
  - id: nzc/defaults
  params:
  - id: sector
    value: Annual CO2 capture per tree
  - id: multiplier  # FIXME
    value: 1
    unit: 1/a

- id: co2_reduction_by_trees
  name: CO2 reduction by trees
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [area_distance]
  output_dimensions: [area_distance]
  input_nodes:
  - id: number_of_new_trees
  - id: annual_co2_capture_by_trees
    to_dimensions: []
  output_nodes:
  - id: forestation_emissions
    tags: [arithmetic_inverse]
    from_dimensions:
    - id: area_distance
      flatten: true
    to_dimensions:
    - id: scope
      categories: [scope1]
    - id: ghg
      categories: [co2e]

- id: forestation_emissions
  name: Forestation emissions
  type: simple.AdditiveNode
  quantity: emissions
  unit: kt/a
  color: '#76B7B2'
  input_dimensions: [ghg, scope]
  output_dimensions: [ghg, scope]
  output_nodes:
  - id: net_emissions
  
- id: forestation_co2_cost
  name: Forestation CO2 cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [scope, cost_type, ghg]
  output_dimensions: [scope, cost_type, ghg]
  input_nodes:
  - id: forestation_emissions
    to_dimensions:
    - id: scope
    - id: ghg
  - id: co2_unit_price
    to_dimensions:
    - id: cost_type
    - id: ghg
  output_nodes:
  - id: forestation_cost
    from_dimensions:
    - id: scope
      flatten: true
    - id: ghg
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder
      categories: [city]

- id: forestation_cost
  name: Forestation cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [cost_type, stakeholder]
  output_dimensions: [cost_type, stakeholder]
  output_nodes:
  - id: total_cost
    to_dimensions:
    - id: cost_type
    - id: stakeholder

- id: tree_benefit_unit_price
  name: Tree benefit unit price
  type: gpc.DatasetNode
  quantity: emission_factor # FIXME unit_price
  unit: MEUR/pcs/a
  input_dimensions: [cost_type]
  output_dimensions: [cost_type]
  input_datasets: [nzc/defaults]
  params:
  - id: sector
    value: 'Benefits from planting trees '
  - id: multiplier  # FIXME
    value: 1
    unit: 1/a

- id: tree_benefit_stakeholders
  name: Tree benefit stakeholders
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    sector: forest costs and savings

- id: tree_co_benefits
  name: Monetary co-benefits
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [cost_type, area_distance, stakeholder]
  output_dimensions: [cost_type, area_distance, stakeholder]
  input_nodes:
  - id: number_of_new_trees
    to_dimensions:
    - id: area_distance
  - id: tree_benefit_unit_price
    to_dimensions:
    - id: cost_type
  - id: tree_benefit_stakeholders
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: forestation_cost
    tags: [arithmetic_inverse]
    from_dimensions:
    - id: area_distance
      flatten: true

actions:

- id: replace_fossil_electricity
  name_en: 4.1 Replace fossil electricity
  type: gpc.DatasetAction2
  quantity: fraction
  unit: '%'
  group: electricity
  input_dimensions: [energy_carrier, fuel_type]
  output_dimensions: [energy_carrier, fuel_type]
  input_datasets: [nzc/defaults]
  output_nodes:
  - id: electricity_production_switched
    from_dimensions:
    - id: fuel_type
      categories: [fossil]
      flatten: true
    to_dimensions:
    - id: energy_carrier
  params:
    sector: Share of current fossil production replaced by renewables (or nuclear)

- id: increase_waste_recycling
  name: 5.1 Increase waste recycling
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%'
  group: waste
  input_dimensions: [waste_treatment, waste_type]
  output_dimensions: [waste_treatment, waste_type]
  input_nodes:
  - id: waste_recycling_shares_historical
    tags: [historical]
  - id: waste_recycling_share_goal
    tags: [goal]
    from_dimensions:
    - id: parameter
      flatten: true
    to_dimensions:
    - id: waste_treatment
    - id: waste_type
  output_nodes:
  - id: waste_recycling_shares

# --------------- Scope 3 ---------------

# - id: improve_building_material_composition
#   name: 6.1 Improve building material composition
#   type: linear.DatasetReduceAction
#   quantity: mass
#   unit: t/m**2
#   input_dimensions: [material]
#   output_dimensions: [material]
#   group: scope_3
#   input_nodes:
#   - id: building_material_composition_historical
#     tags: [historical]
#   - id: building_material_composition_goal
#     tags: [goal]
#   output_nodes:
#   - id: building_materials_used_by_material
#     to_dimensions:
#     - id: material

# --------------- AFOLU -----------------

- id: tree_planting
  name: 7.1 Tree planting
  type: gpc.DatasetAction2
  quantity: number
  unit: pcs
  group: reforestation
  input_dimensions: [area_distance]
  output_dimensions: [area_distance]
  input_datasets: [nzc/defaults]
  params:
    sector: Number of planted trees until 2030
  output_nodes:
  - id: number_of_new_trees

- id: reduced_co2_emissions_in_other_sectors
  name: '6? Reduced CO2 emissions in other sectors'
  type: gpc.DatasetAction2
  quantity: fraction
  unit: '%'
  group: scope_3
  input_datasets: [nzc/defaults]
  params:
    sector: Reduced CO2e emissions committed by Industry, Agriculture, etc. in Other sector
