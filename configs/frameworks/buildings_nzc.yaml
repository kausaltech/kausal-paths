# Required nodes from outside the framework:
# net_emissions
# electricity_production_emission_factor
# Required dimensions from outside the framework:
# building_energy_class
# heating_type
# ghg
# scope
# Required parameters from outside the framework:

emission_sectors:

- id: building_emissions
  name: Building emissions
  description: 'This module (all nodes upstream) is based on the excel sheets 3.0 - 3.4 Building & heat levers.'
  color: '#4E79A7'
  part_of: net_emissions

nodes:

# * = data is in the city request dataset
# Model inputs: 176* 519 257* 254* 532 544 545 272* 273* 278 290 296..299* 302..305* 319..322* 586
# 3.4 heat generation: (coming from model inputs) 19 25 248 259

# ----------------- Building stock ----------------------

- id: existing_building_stock
  name: Existing building stock
  description: 'Data sources:<ul><li>Model inputs & assumptions, F250. Size of building stock. 
    </li><li>Model inputs & assumptions, F519. Rate of demolition and new construction.</li><li>Model inputs & assumptions, F257. Retrofitted area %.</li></ul>
    Calculations: The logic is that the floor area per inhabitant stays constant. Amount of construction is a fixed fraction of existing building stock and the difference between building stock increase and construction is assumed to be demolished. So, logically, construction must be greater than or equal to population growth.'
  type: gpc.DatasetNode
  quantity: floor_area
  unit: ksqm
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Total floor area (residental & non-residential)

- id: projected_building_stock
  name: Projected building stock
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
    tags: [non_additive]
  - id: population
    tags: [ratio_to_last_historical_value]
    to_dimensions: []

- id: new_building_shares_historical
  name: New building shares historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: 'Energy efficiency of new buildings, Share'
    inventory_only: true

- id: new_building_shares_improvements
  name: New building shares improvements
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets: [nzc/defaults]
  params:
    sector: Share of new buildings built with high energy efficiency standards

- id: new_building_shares
  name: New building shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets: [nzc/defaults]
  params:
    sector: Share of new buildings built # new building shares # 

- id: demolition_rate
  name: Demolition rate
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%/a'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
  - id: sector
    value: Demolition rate existing buildings

- id: demolished_building_stock
  name: Demolished building stock
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: projected_building_stock
    tags: [non_additive]
  - id: demolition_rate

- id: new_building_stock_total
  name: New building stock total
  type: simple.AdditiveNode
  quantity: floor_area
  unit: km**2/a
  input_nodes:
  - id: projected_building_stock
    tags: [difference]
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions: []
  - id: demolished_building_stock
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions: []

- id: new_building_stock
  name: New building stock
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: new_building_stock_total
    tags: [non_additive]
    to_dimensions: []
  - id: new_building_shares

- id: building_stock
  name: Building stock
  description: Existing building stock minus demolition plus new construction.
  type: simple.AdditiveNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
    tags: [extend_values]
  - id: new_building_stock
    tags: [cumulative]
  - id: demolished_building_stock
    tags: [arithmetic_inverse, cumulative]
  - id: renovated_building_stock
    tags: [extend_values, cumulative]
    to_dimensions:
    - id: building_energy_class

- id: old_building_renovation_rate_historical
  name: Old building renovation rate historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%/a'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of building stock renovated each year

- id: old_building_renovation_rate_goal
  name: Old building renovation rate goal
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%/a'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    filters:
    - column: Year
      value: 2030
      drop_col: false
  params:
    sector: Renovation rate - decarbonisation scenario

- id: old_building_renovation_rate
  name: Old building renovation rate
  description: Shifts building stock from non-renovated to minor or agressively renovated stock. The effect is cumulative, i.e. the renovated stock stays permanently in the new category and thus the stock accumulates to renovated categories.
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%/a'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: old_building_renovation_rate_historical
    to_dimensions:
    - id: building_energy_class

- id: renovation_intensity_shares_historical
  name: Renovation intensity shares historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Renovations Actual share of market in baseline scenario

- id: renovation_intensity_shares_goal
  name: Renovation intensity shares goal
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    filters:
    - column: Year
      value: 2030
      drop_col: false
  params:
    sector: Assumed share of type of renovation in lever

- id: renovation_intensity_shares
  name: Renovation intensity shares
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: renovation_intensity_shares_historical

- id: renovated_building_stock
  name: Renovated building stock
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations]
      flatten: true
    to_dimensions: []
  - id: old_building_renovation_rate
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions: []
  - id: renovation_intensity_shares

# --------------------- Heating ---------------------

- id: energy_use_intensity_data  # FIXME Calculate from relative changes, not data
  name: Energy use intensity data for heating
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: energy use intensity

- id: energy_use_intensity_relative_old
  name: Relative energy use intensity of existing building classes
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Energy efficiency improvements from building renovations

- id: energy_use_intensity_old
  name: Energy use intensity of existing buildings
  type: simple.MultiplicativeNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: energy_use_intensity_data
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations]
      flatten: true
    to_dimensions: []
  - id: energy_use_intensity_relative_old
    tags: [complement]

- id: energy_use_intensity_change_new
  name: Energy use intensity change for new buildings
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Improvement in energy efficiency relative to minimum requirement

- id: energy_use_intensity_new
  name: Energy use intensity for heating of new buildings
  type: simple.MultiplicativeNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: energy_use_intensity_data
    tags: [non_additive]
  - id: energy_use_intensity_change_new
    tags: [complement]

- id: energy_use_intensity
  name: Energy use intensity for heating of old and new buildings
  type: simple.AdditiveNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: energy_use_intensity_new
  - id: energy_use_intensity_old

- id: building_heating_type_share_historical
  name: Building heating type share historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [heating_type, scope]
  output_dimensions: [heating_type, scope]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Heating technologies

- id: building_heating_type_share_goal
  name: Building heating type share goal
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [heating_type, scope]
  output_dimensions: [heating_type, scope]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Heating technologies in 2030

- id: building_heating_type_share
  name: Building heating type share
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [heating_type, scope]
  output_dimensions: [heating_type, scope]
  input_nodes:
  - id: building_heating_type_share_historical

- id: heating_fuel_share_historical
  name: Heating fuel share historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [energy_carrier, heating_type]
  output_dimensions: [energy_carrier, heating_type]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of heating fuel

- id: heating_fuel_share_goal
  name: Heating fuel share goal
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [energy_carrier, heating_type]
  output_dimensions: [energy_carrier, heating_type]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of heating in 2030

- id: heating_fuel_share
  name: Heating fuel share
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  input_dimensions: [energy_carrier, heating_type]
  output_dimensions: [energy_carrier, heating_type]
  input_nodes:
  - id: heating_fuel_share_historical

- id: heating_fossil_share_historical
  name: Heating fossil share historical
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [fuel_type, heating_type, energy_carrier]
  output_dimensions: [fuel_type, heating_type, energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of waste used in district heating that is fossil / non-fossil

- id: heating_fossil_share_goal
  name: Heating fossil share goal
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [fuel_type, heating_type, energy_carrier]
  output_dimensions: [fuel_type, heating_type, energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of waste in 2030 used in district heating that is fossil / non-fossil

- id: heating_fossil_share
  name: Heating fossil share
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  input_dimensions: [fuel_type, heating_type, energy_carrier]
  output_dimensions: [fuel_type, heating_type, energy_carrier]
  input_nodes:
  - id: heating_fossil_share_historical

- id: building_heating_shares
  name: Building heating shares
  type: simple.MultiplicativeNode
  quantity: fraction
  unit: '%'
  input_dimensions: [heating_type, energy_carrier, fuel_type, scope]
  output_dimensions: [heating_type, energy_carrier, fuel_type, scope]
  input_nodes:
  - id: building_heating_type_share
    tags: [non_additive]
    to_dimensions:
    - id: heating_type
    - id: scope
  - id: heating_fossil_share
    tags: [non_additive]
    to_dimensions:
    - id: heating_type
    - id: energy_carrier
    - id: fuel_type
  - id: heating_fuel_share
    tags: [non_additive]
    to_dimensions:
    - id: heating_type
    - id: energy_carrier

- id: building_heat_energy_use
  name: Building heat energy use
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [heating_type, building_energy_class, energy_carrier, scope, fuel_type]
  output_dimensions: [heating_type, building_energy_class, energy_carrier, scope, fuel_type]
  input_nodes:
  - id: building_stock
    to_dimensions:
    - id: building_energy_class
  - id: energy_use_intensity
    to_dimensions:
    - id: building_energy_class
  - id: building_heating_shares
    to_dimensions:
    - id: heating_type
    - id: energy_carrier
    - id: scope
    - id: fuel_type

- id: efficiency_of_heat_pumps
  name: Efficiency of heat pumps
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: MWh/MWh
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Efficiency of heat pumps

- id: building_heat_electricity_use
  name: Building heat electricity use
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [heating_type, building_energy_class, scope, fuel_type, energy_carrier]
  output_dimensions: [heating_type, building_energy_class, scope, fuel_type, energy_carrier]
  input_nodes:
  - id: building_stock
    to_dimensions:
    - id: building_energy_class
  - id: energy_use_intensity
    to_dimensions:
    - id: building_energy_class
  - id: building_heating_type_share
    to_dimensions:
    - id: heating_type
    - id: scope
  - id: efficiency_of_heat_pumps
    to_dimensions:
    - id: fuel_type
    - id: energy_carrier
  output_nodes:
  - id: total_electricity_consumption
    from_dimensions:
    - id: heating_type
      flatten: true
    - id: building_energy_class
      flatten: true
    - id: scope
      flatten: true
    - id: fuel_type
      flatten: true
    to_dimensions:
    - id: energy_carrier

- id: heating_emission_factor
  name: Heating emission factor
  description: Emission factor for building heating
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: g/kWh
  input_dimensions: [pollutant, heating_type]
  output_dimensions: [pollutant, heating_type]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Emission factors from heat production

- id: building_heating_emissions
  name: Building heating emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [heating_type, pollutant, scope]
  output_dimensions: [heating_type, pollutant, scope]
  input_nodes:
  - id: building_heat_energy_use
    from_dimensions:
    - id: building_energy_class
      flatten: true
    - id: energy_carrier
      flatten: true
    - id: fuel_type
      flatten: true
    to_dimensions:
    - id: heating_type
    - id: scope
  - id: heating_emission_factor
    to_dimensions:
    - id: pollutant
    - id: heating_type
  output_nodes:
  - id: building_emissions
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: heating_type
      flatten: true
    to_dimensions:
    - id: ghg
      categories: [co2e]
    - id: scope

- id: new_building_current_unit_price
  name: Building current unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Building costs - new buildings

- id: new_building_unit_price
  name: New building unit price
  type: costs.ExponentialNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: new_building_current_unit_price
  params:
  - id: annual_change  # FIXME from nzc/defaults Cost improvements - new buildings
    value: -1.024671139
    unit: '%'

- id: new_building_cost_shares
  name: Building current cost shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: investment costs in new buildings

- id: building_renovation_investment_shares
  name: Building renovation investment shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: building renovation investments

- id: new_building_cost
  name: New building cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [building_energy_class, stakeholder, cost_type]
  output_dimensions: [building_energy_class, stakeholder, cost_type]
  input_nodes:
  - id: new_building_stock
    to_dimensions:
    - id: building_energy_class
  - id: new_building_unit_price
    to_dimensions:
    - id: building_energy_class
  - id: new_building_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type

# -------------------- Electricity --------------------

- id: consumer_electricity_intensity_baseline
  name: Electricity use intensity for lighting & appliances
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Average electricity use for lighting & appliances

- id: efficient_appliances_rate
  name: Efficient appliances rate
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%/a'
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: 3.3 Efficient lighting & appliances

- id: efficiency_programme_done_in_old_buildings
  name: Efficiency programme done in old buildings
  type: simple.MultiplicativeNode
  quantity: fraction
  unit: km**2
  input_dimensions: [building_energy_class, efficiency_programme, energy_carrier]
  output_dimensions: [building_energy_class, efficiency_programme, energy_carrier]
  input_nodes:
  - id: efficient_appliances_rate
    tags: [complement_cumulative_product, complement]
    to_dimensions:
    - id: energy_carrier
  - id: building_stock
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations, minor_renovation, major_renovation]
    to_dimensions:
    - id: building_energy_class
  - id: efficiency_programme_shares
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  output_nodes:
  - id: building_stock_by_efficiency_programme
    to_dimensions:
    - id: building_energy_class
    - id: efficiency_programme
    - id: energy_carrier

- id: efficiency_programme_not_done_in_old_buildings
  name: Efficiency programme not done in old buildings
  type: simple.MultiplicativeNode
  quantity: fraction
  unit: km**2
  input_dimensions: [building_energy_class, energy_carrier]
  output_dimensions: [building_energy_class, energy_carrier]
  input_nodes:
  - id: efficient_appliances_rate
    tags: [complement_cumulative_product]
    to_dimensions:
    - id: energy_carrier
  - id: building_stock
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations, minor_renovation, major_renovation]
    to_dimensions:
    - id: building_energy_class
  output_nodes:
  - id: building_stock_by_efficiency_programme
    to_dimensions:
    - id: building_energy_class
    - id: energy_carrier
    - id: efficiency_programme
      categories: [no_improvements]

- id: efficiency_programme_shares_data
  name: Efficiency programme shares data
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Assumed share of type of efficiency programme for lever

- id: efficiency_programme_shares
  name: Efficiency programme shares
  type: simple.FillNewCategoryNode
  quantity: fraction
  unit: '%'
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_nodes: [efficiency_programme_shares_data]
  params:
    new_category: 'efficiency_programme:no_improvements'

- id: efficiency_improved_new_buildings
  name: Efficiency improved new buildings
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [efficiency_programme, energy_carrier, building_energy_class]
  output_dimensions: [efficiency_programme, energy_carrier, building_energy_class]
  input_nodes:
  - id: building_stock
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [new_standard, new_top_performance]
    to_dimensions:
    - id: building_energy_class
  - id: efficiency_programme_shares
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  output_nodes:
  - id: building_stock_by_efficiency_programme

- id: relative_electricity_need_reduction
  name: Reduced electricity need
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Efficiency improvements for each renovation

- id: building_stock_by_efficiency_programme
  name: Building stock by efficiency programme
  type: simple.AdditiveNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [efficiency_programme, energy_carrier, building_energy_class]
  output_dimensions: [efficiency_programme, energy_carrier, building_energy_class]

- id: consumer_electricity_use
  name: Electricity use for lighting & appliances
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [building_energy_class, efficiency_programme, energy_carrier]
  output_dimensions: [building_energy_class, efficiency_programme, energy_carrier]
  input_nodes:
  - id: building_stock_by_efficiency_programme
  - id: consumer_electricity_intensity_baseline
    to_dimensions:
    - id: energy_carrier
  - id: relative_electricity_need_reduction
    tags: [complement]
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  output_nodes:
  - id: total_electricity_consumption
    from_dimensions:
    - id: building_energy_class
      flatten: true
    - id: efficiency_programme
      flatten: true

# --------------- Emissions ------------

- id: consumer_electricity_emissions
  name: Consumer electricity emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [pollutant, energy_carrier]
  output_dimensions: [pollutant, energy_carrier]
  input_nodes:
  - id: consumer_electricity_use
    from_dimensions:
    - id: efficiency_programme
      flatten: true
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: energy_carrier
  - id: electricity_production_emission_factor
  output_nodes:
  - id: building_emissions
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope2]

- id: building_air_pollutant_emissions
  name: Building air pollutant emissions
  type: simple.AdditiveNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [pollutant]
  output_dimensions: [pollutant]
  input_nodes:
  - id: building_heating_emissions
    from_dimensions:
    - id: heating_type
      flatten: true
    - id: scope
      flatten: true
    - id: pollutant
      categories: [nox, pm25_combustion, pm10_combustion]
  - id: consumer_electricity_emissions
    from_dimensions:
    - id: energy_carrier
      flatten: true
    - id: pollutant
      categories: [nox, pm25_combustion, pm10_combustion]

# --------------- Costs ----------------

- id: efficiency_programme_current_unit_price
  name: Efficiency programme current unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [efficiency_programme, energy_carrier, cost_type]
  output_dimensions: [efficiency_programme, energy_carrier, cost_type]
  input_datasets:
  - id: nzc/defaults
    filters:
    - column: Energy carrier
      value: electricity
      drop_col: false
  params:
    sector: Cost of efficiency programme per m2

- id: efficiency_programme_unit_price
  name: Efficiency programme unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [efficiency_programme, energy_carrier, cost_type]
  output_dimensions: [efficiency_programme, energy_carrier, cost_type]
  input_datasets:
  - id: nzc/defaults
    filters:
    - column: Energy carrier
      value: electricity
      drop_col: false
  # input_nodes:
  # - id: efficiency_programme_current_unit_price
  params:
    sector: Cost of efficiency programme per m2
  # - id: annual_change  # FIXME from nzc/defaults Cost improvements of efficiency programme
  #   value: 1.024671139
  #   unit: '%'
  # - id: is_decreasing_rate
  #   value: true

- id: old_building_cost_shares
  name: Old building cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: building renovation investments

- id: efficiency_programme_cost
  name: Efficiency programme cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [efficiency_programme, energy_carrier, stakeholder, cost_type]
  output_dimensions: [efficiency_programme, energy_carrier, stakeholder, cost_type]
  input_nodes:
  - id: building_stock_by_efficiency_programme
    tags: [difference]
    from_dimensions:
    - id: efficiency_programme
      categories: [no_improvements]
      exclude: true
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  - id: efficiency_programme_unit_price
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
    - id: cost_type
  - id: old_building_cost_shares  # CHECK
    to_dimensions:
    - id: stakeholder
    - id: cost_type

- id: heating_re_investment_fraction
  name: Heating re-investment fraction
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [heating_type, energy_carrier]
  output_dimensions: [heating_type, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    sector: Share of current fossil production that would need to be re-invested in by 2030, if current production where to continue

- id: new_heating_capacity_needed
  name: New heating capacity needed (investments)
  type: simple.MultiplicativeNode
  quantity: currency
  unit: GWh/a**2
  input_dimensions: [heating_type, energy_carrier]
  output_dimensions: [heating_type, energy_carrier]
  input_nodes:
  - id: building_heat_energy_use
    tags: [non_additive, difference, make_nonnegative]  # FIXME Should we look also at negative investments?
    from_dimensions:
    - id: scope
      flatten: true
    - id: building_energy_class
      flatten: true
    - id: fuel_type
      flatten: true
    to_dimensions:
    - id: heating_type
    - id: energy_carrier
  - id: heating_re_investment_fraction
    to_dimensions:
    - id: heating_type
    - id: energy_carrier

- id: un_levelised_capital_cost_of_heating
  name: Un-levelised capital cost of heating
  description: The unit is multiplied by 1 a because the unit price is given per production, not production capacity.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR*a/MWh
  input_dimensions: [energy_carrier, cost_type, heating_type]
  output_dimensions: [energy_carrier, cost_type, heating_type]
  input_datasets: [nzc/defaults]
  params:
  - id: sector
    value: Un-levelized capital cost of heating
  - id: multiplier
    value: 1
    unit: a

- id: heating_cost_stakeholder_shares
  name: Heating cost stakeholder shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: '%'
  input_dimensions: [stakeholder, cost_type, heating_type]
  output_dimensions: [stakeholder, cost_type, heating_type]
  input_datasets: [nzc/defaults]
  params:
    sector: heating costs

- id: new_heating_capacity_cost
  name: New heating capacity cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: EUR/a
  input_dimensions: [energy_carrier, cost_type, heating_type, stakeholder]
  output_dimensions: [energy_carrier, cost_type, heating_type, stakeholder]
  input_nodes:
  - id: new_heating_capacity_needed
    to_dimensions:
    - id: heating_type
    - id: energy_carrier
  - id: un_levelised_capital_cost_of_heating
    to_dimensions:
    - id: cost_type
    - id: heating_type
    - id: energy_carrier
  - id: heating_cost_stakeholder_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
    - id: heating_type
  output_nodes:
  - id: building_cost
    from_dimensions:
    - id: energy_carrier
      flatten: true
    - id: heating_type
      flatten: true

# ---------------- Summary ---------------------

- id: building_cost  # TODO Add stakeholders and topic-wise costs
  name: Building cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_nodes:
  - id: new_building_cost
    from_dimensions:
    - id: building_energy_class
      flatten: true
  - id: efficiency_programme_cost
    from_dimensions:
    - id: efficiency_programme
      flatten: true
    - id: energy_carrier
      flatten: true
    to_dimensions:  # FIXME Allocate categories correctly
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - total_cost

actions:

- id: renovation_rate_improvement
  name: 3.1.1 Renovation rate improvement
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%/a'
  group: buildings
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: old_building_renovation_rate_historical
    tags: [historical]
    to_dimensions:
    - id: building_energy_class
  - id: old_building_renovation_rate_goal
    tags: [goal]
    to_dimensions:
    - id: building_energy_class
  output_nodes:
  - id: old_building_renovation_rate

- id: renovation_shares_improvement
  name: 3.1.2 Renovation shares improvement
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: renovation_intensity_shares_historical
    tags: [historical, inventory_only]
    to_dimensions:
    - id: building_energy_class
  - id: renovation_intensity_shares_goal
    tags: [goal]
    to_dimensions:
    - id: building_energy_class
  output_nodes:
  - id: renovation_intensity_shares

- id: new_building_shares_improvement
  name: 3.2 New building shares improvement
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: new_building_shares_historical
    tags: [historical]
  - id: new_building_shares_improvements
    tags: [goal]
  output_nodes:
  - id: new_building_shares

- id: heating_technology_improvement  # FIXME Add 20 a lifetime
  name: 3.4.1 Heating technology improvement
  description: Switch from local to district heating.
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [heating_type, scope]
  output_dimensions: [heating_type, scope]
  input_nodes:
  - id: building_heating_type_share_historical
    tags: [historical, inventory_only]
    # from_dimensions:
    # - id: scope
    #   flatten: true
    # to_dimensions:
    # - id: heating_type
  - id: building_heating_type_share_goal
    tags: [goal]
    to_dimensions:
    - id: heating_type
    - id: scope
  output_nodes:
  - id: building_heating_type_share
    to_dimensions:
    - id: heating_type
    - id: scope
#      categories: [scope1]

- id: heating_energy_improvement
  name: 3.4.2 Heating energy improvement
  description: Improve the fuel shares of heating.
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [energy_carrier, heating_type]
  output_dimensions: [energy_carrier, heating_type]
  input_nodes:
  - id: heating_fuel_share_historical
    tags: [historical]
  - id: heating_fuel_share_goal
    tags: [goal]
  output_nodes:
  - id: heating_fuel_share

- id: change_heating_fossil_share
  name: 3.4.3 Change heating fossil share
  type: linear.DatasetReduceAction
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [energy_carrier, fuel_type, heating_type]
  output_dimensions: [energy_carrier, fuel_type, heating_type]
  input_nodes:
  - id: heating_fossil_share_historical
    tags: [historical]
  - id: heating_fossil_share_goal
    tags: [goal]
    to_dimensions:
    - id: fuel_type
    - id: energy_carrier
    - id: heating_type
  output_nodes:
  - id: heating_fossil_share

- id: fossil_electricity_replacement_fraction
  name: 3.4.5 Fossil electricity replacement fraction
  type: gpc.DatasetAction2
  quantity: fraction
  unit: '%'
  group: buildings
  input_dimensions: [fuel_type, energy_carrier]
  output_dimensions: [fuel_type, energy_carrier]
  input_datasets:
  - id: nzc/defaults
  params:
    sector: Share of current fossil production replaced by renewables (or nuclear)

- id: top_performance_improvement
  name: '? Top performance standard improvement compared with the regular new buildings'
  type: simple.CumulativeAdditiveAction
  quantity: fraction
  unit: '%'
  group: buildings
  historical_values: [[2021, 0], [2022, 0]]
  forecast_values: [[2023, 50]]
  output_nodes:
  - id: energy_use_intensity_change_new
    to_dimensions:
    - id: building_energy_class
      categories: [new_top_performance]

# - id: electricity_need_reduction
#   name: 3.3 Electricity need reduction
#   description: The action looks at renovated and newly built buildings and improves their electricity use. The fractions of minor and major improvement come from the user. If the action is not done, no improvements are made.
#   type: simple.CumulativeAdditiveAction
#   quantity: fraction
#   unit: dimensionless
#   group: buildings
#   historical_values: [[2019, 0.0], [2022, 0.0]]
#   forecast_values: [[2023, 1.0]]
#   input_dataset_processors: [LinearInterpolation]
#   output_nodes:
#   - id: efficiency_programme_shares_data
#     tags: [non_additive]
#     to_dimensions: []
