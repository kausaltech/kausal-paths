name: reviewdog
on:
  pull_request:
  workflow_call:
    secrets:
      EXTRA_PYPI_INDEX:
        description: 'Private PYPI index'
        required: true

jobs:
  reviewdog:
    name: reviewdog
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true
          prune-cache: false

      - name: Setup mypy cache
        uses: actions/cache@v4
        id: mypy_cache
        with:
          path: |
            .mypy_cache
          key: ${{ runner.os }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}
            ${{ runner.os }}

      # - uses: awalsh128/cache-apt-pkgs-action@latest
      #   with:
      #     packages: libproj-dev gdal-bin
      #     version: 1.0

      - name: Install deb dependencies
        run: sudo apt update && sudo apt install --no-install-recommends -y libproj-dev gdal-bin

      - name: Install Python dependencies
        env:
          UV_EXTRA_INDEX_URL: ${{ secrets.EXTRA_PYPI_INDEX }}
        run: |
          uv sync --group lint --extra kausal

      - name: Determine Reviewdog context
        id: reviewdog_context
        run: |
          if [ "${{ github.event_name }}" = "push" -a -n "${{ github.event.before }}" ] ; then
            # Check if the "before" hash exists
            if [ "$(git cat-file -t ${{ github.event.before }})" = "commit" ] ; then
              echo Diffing ${{ github.event.before }}..${{ github.sha }}
              git diff --find-renames --submodule=diff ${{ github.event.before }} ${{ github.sha }} > ${{ runner.temp }}/changes.diff
            else
              echo Commit ${{ github.event.before }} does not exist -- diffing against main
              git diff --find-renames --submodule=diff origin/main..${{ github.sha }} > ${{ runner.temp }}/changes.diff
            fi
            echo reviewdog_diff_file=${{ runner.temp }}/changes.diff >> $GITHUB_OUTPUT
            echo reviewdog_reporter=github-check >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "pull_request" ] ; then
            echo reviewdog_diff_file= >> $GITHUB_OUTPUT
            echo reviewdog_reporter=github-pr-review >> $GITHUB_OUTPUT
          else
            echo Unsupported event: ${{ github.event_name }}
            exit 1
          fi
        shell: bash

      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest # Optional. [latest,nightly,v.X.Y.Z]

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REVIEWDOG_ARGS="-reporter=${{ steps.reviewdog_context.outputs.reviewdog_reporter }} -fail-level=error"
          diff_file=${{ steps.reviewdog_context.outputs.reviewdog_diff_file }}
          if [ -n "$diff_file" ] ; then
            REVIEWDOG_ARGS="$REVIEWDOG_ARGS -diff 'cat $diff_file'"
          fi
          echo running ruff
          reviewdog -runners=ruff -filter-mode=added $REVIEWDOG_ARGS
          echo running mypy
          mypy . > ${{ runner.temp }}/mypy-output.txt || mypy_exit=$?
          if [[ $mypy_exit -ne 0 && $mypy_exit -ne 1 ]]; then
            echo "mypy failed with exit code $mypy_exit"
            cat ${{ runner.temp }}/mypy-output.txt
            exit $mypy_exit
          fi
          echo filtering suppressed mypy errors
          cat ${{ runner.temp }}/mypy-output.txt | mypy-baseline filter --hide-stats > ${{ runner.temp }}/mypy-baselined-output.txt || baseline_exit=$?
          echo running reviewdog again for mypy reporting
          reviewdog -f=mypy -name=mypy -filter-mode=nofilter $REVIEWDOG_ARGS < ${{ runner.temp }}/mypy-baselined-output.txt
